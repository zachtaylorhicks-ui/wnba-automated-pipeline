
name: WNBA Automated Prediction Pipeline

on:
  # Run the pipeline every day at 6:00 AM UTC
  schedule:
    - cron: '0 6 * * *'
  # Allow manual runs from the GitHub Actions tab
  workflow_dispatch:

jobs:
  # This job will run all the Python scripts in sequence
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install all dependencies from our requirements file
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # PyTorch Geometric needs special installation commands
          pip install torch-scatter torch-sparse torch-cluster torch-spline-conv -f https://data.pyg.org/whl/torch-2.1.0+cpu.html

      # Step 4: Run the data preparation and feature engineering script
      # This creates the necessary input files for the training and prediction steps.
      # Note: This step assumes the base CSV is already in the 'data' directory.
      - name: Run Data Preparation & Feature Engineering
        run: python src/data_prep.py

      # Step 5: Train the models. We can add a condition to run this less frequently.
      # The 'if' condition checks if it's Monday (day of week == 1)
      - name: Train All Models (Weekly on Mondays)
        if: github.event.schedule == '0 6 * * 1' || github.event_name == 'workflow_dispatch'
        run: python src/train.py

      # Step 6: Generate the final blended predictions
      - name: Generate Blended Predictions
        run: python src/predict.py

      # Step 7: Build the final website JSON assets
      - name: Build Website JSON Assets
        run: python src/build_web_assets.py

      # Step 8: Commit and push the 'dist' folder to the repository
      - name: Commit and Push Website Data
        run: |
          git config --global user.name 'WNBA Prediction Bot'
          git config --global user.email 'bot@noreply.github.com'
          # Add the 'dist' directory. The -f flag forces it to be added even if it's in .gitignore
          git add -f dist/
          # Check if there are any changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Automated data and website asset update"
            git push
          else
            echo "No changes to website assets detected."
          fi
